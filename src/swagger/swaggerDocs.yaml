openapi: "3.0.1"
info: 
  version: "1.3.0"
  title: "College API"
  description: "API para estudo de caso de TCC"

tags:
- name: "Student"
  description: "Student Routes"

- name: "Course"
  description: "Course Routes"

- name: "Faker"
  description: "Generate Faker Data Routes"

paths:
  /api/students:
    get:
      tags:
        - "Student"
      summary: "Get all base info of Students"
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    post:
      tags:
        - "Student"
      summary: "Create Student"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStudent"
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"      
  /api/students/{matriculation}:
    get:
      tags:
        - "Student"
      summary: "Get all base info of Students"
      parameters:
        - name: matriculation
          in: path
          description: matriculation of student
          required: true
          schema:
            type: integer
            example: YYYY0001110123
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    put:
      tags:
        - "Student"
      summary: "Update Student"
      parameters:
        - name: matriculation
          in: path
          description: matriculation of student
          required: true
          schema:
            type: integer
            example: YYYY0001110123      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStudent"
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"       
    delete:
      tags:
        - "Student"
      summary: "Delete Student"
      parameters:
        - name: matriculation
          in: path
          description: matriculation of student
          required: true
          schema:
            type: integer
            example: YYYY0001110123      
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"          
  /api/students/{matriculation}/subjects:
    get:
      tags:
        - "Student"
      summary: "Get all base info of Students"
      parameters:
        - name: matriculation
          in: path
          description: matriculation of student
          required: true
          schema:
            type: integer
            example: YYYY0001110123
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /api/students/{matriculation}/historic:
    get:
      tags:
        - "Student"
      summary: "Get all base info of Students"
      parameters:
        - name: matriculation
          in: path
          description: matriculation of student
          required: true
          schema:
            type: integer
            example: YYYY0001110123
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /api/courses/{course_id}/students:
    get:
      tags:
        - "Course"
      summary: "Get all students of a course"
      parameters:
        - name: course_id
          in: path
          description: course_id
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"    
  /api/courses/{course_id}/subjects:
    get:
      tags:
        - "Course"
      summary: "Get all subjects of a course"
      parameters:
        - name: course_id
          in: path
          description: is id of course
          required: true
          schema:
            type: integer
            example: 1
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"  
  /api/courses/{course_id}/subjects/{subject_id}:
    get:
      tags:
        - "Course"
      summary: "Get information about only one specific subject"
      parameters:
        - name: course_id
          in: path
          description: is id of course
          required: true
          schema:
            type: integer
            example: 1
        - name: subject_id
          in: path
          description: is id of subject
          required: true
          schema:
            type: integer
            example: 1            
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"        
  /api/courses/{course_id}/subjects/{subject_id}/dependencies:
    get:
      tags:
        - "Course"
      summary: "Get dependencies of a subject"
      parameters:
        - name: course_id
          in: path
          description: is id of course
          required: true
          schema:
            type: integer
            example: 1
        - name: subject_id
          in: path
          description: is id of subject
          required: true
          schema:
            type: integer
            example: 1            
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"     
  /api/courses/{course_id}/teachers:
    get:
      tags:
        - "Course"
      summary: "Get all teachers of a course"
      parameters:
        - name: course_id
          in: path
          description: id of the course
          required: true
          schema:
            type: integer
            example: 1          
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"    
  /api/courses/{course_id}/teachers/{matriculation}:
    get:
      tags:
        - "Course"
      summary: "Get info about a teacher"
      parameters:
        - name: course_id
          in: path
          description: id of the course
          required: true
          schema:
            type: integer
            example: 1
        - name: matriculation
          in: path
          description: matriculation of the teacher
          required: true
          schema:
            type: integer
            example: 1            
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"    
  /api/courses/{course_id}/teachers/{matriculation}/students:
    get:
      tags:
        - "Course"
      summary: "Get students of a teacher"
      parameters:
        - name: course_id
          in: path
          description: id of the course
          required: true
          schema:
            type: integer
            example: 1
        - name: matriculation
          in: path
          description: matriculation of the teacher
          required: true
          schema:
            type: integer
            example: 1            
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"         
  /api/courses/{course_id}/teachers/{matriculation}/subjects:
    get:
      tags:
        - "Course"
      summary: "Get subjects of a teacher"
      parameters:
        - name: course_id
          in: path
          description: id of the course
          required: true
          schema:
            type: integer
            example: 1
        - name: matriculation
          in: path
          description: matriculation of the teacher
          required: true
          schema:
            type: integer
            example: 1            
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"    
  /api/generate-fake-data/students:
    post:
      tags:
        - "Faker"
      summary: "Generate Faker Students"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFakerEntity"
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"   
  /api/generate-fake-data/teachers:
    post:
      tags:
        - "Faker"
      summary: "Generate Faker Teachers"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFakerEntity"
      responses:
        200:
          description: "Its Worked"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"                                                                                         
          


components:
  schemas:
    CreateStudent:
      type: "object"
      properties:
        matriculation:
          type: "string"
        name:
          type: "string"  
        email:
          type: "string"
        birth_day:
          type: "string" 
          format: "date-time"     
    CreateFakerEntity:
      type: "object"
      properties:
        course_id:
          type: "integer"
        amount:
          type: "integer"                       
    UpdateStudent:
      type: "object"
      properties:
        name:
          type: "string"  
        email:
          type: "string"
        birth_day:
          type: "string"   
          format: "date-time"             
        started_in:
          type: "string"     
          format: "date-time"                                              